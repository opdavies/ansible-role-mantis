---
- name: Check for the Mantis archive.
  stat:
    path: "{{ mantis_tmp }}"
  register: mantis_tmp_path

- name: Download Mantis.
  get_url:
    url: "http://sourceforge.net/projects/mantisbt/files/mantis-stable/{{ mantis_version }}/mantisbt-{{ mantis_version }}.{{ mantis_file_extension }}/download"
    dest: "{{ mantis_tmp }}"
  when: not mantis_tmp_path.stat.exists
  register: mantis_downloaded

- name: Create directory for Mantis.
  sudo: yes
  file:
    path: "{{ mantis_path }}"
    state: directory
  when: mantis_downloaded.changed

- name: Extract Mantis.
  sudo: yes
  unarchive:
    src: "{{ mantis_tmp }}"
    dest: "{{ mantis_path }}"
    copy: no
    mode: 0755
    owner: root
    group: root
  when: mantis_downloaded.changed

- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- include: Debian.yml
  when: ansible_os_family == 'Debian'

- include: RedHat.yml
  when: ansible_os_family == 'RedHat'

- name: Start services.
  sudo: yes
  service:
    name: "{{ item }}"
    state: running
    enabled: true
  with_items:
    - "{{ mantis_apache_service }}"
    - "{{ mantis_mysql_service }}"

- name: Create Mantis vhost.
  sudo: yes
  template:
    src: vhost.j2
    dest: "{{ mantis_vhost_dir }}/mantis.conf"
  notify: restart apache
  when: mantis_install_vhost

- name: Create Mantis database.
  sudo: yes
  mysql_db:
    name: "{{ mantis_db_name }}"
    state: present
  when: mantis_create_db
  register: mantis_db_created

- name: Check for the database install script.
  stat:
    path: "{{ mantis_db }}"
  register: mantis_db_path

- name: Copy database install script.
  copy:
    src: install.sql
    dest: "{{ mantis_db }}"
  when: mantis_install_db and not mantis_db_path.stat.exists

- name: Install Mantis database.
  sudo: yes
  mysql_db:
    name: "{{ mantis_db_name }}"
    state: import
    target: /tmp/mantis_install.sql
  when: mantis_db_created.changed

- name: Create Mantis database user.
  sudo: yes
  mysql_user:
    name: "{{ mantis_db_user }}"
    password: "{{ mantis_db_pass }}"
    priv: "{{ mantis_db_name }}.*:ALL"
    state: present
  when: mantis_db_created.changed

- name: Copy config_inc.php
  sudo: yes
  template:
    src: config_inc.php.j2
    dest: "{{ mantis_full_path }}/config_inc.php"
    mode: 0755
    owner: root
    group: root
  when: mantis_db_created.changed or mantis_copy_config

- name: Remove admin directory.
  file:
    path: "{{ mantis_full_path }}/admin"
    state: absent
  when: mantis_remove_admin
